class Point {}
class kucchbhilikho permits kucchbhi {

}
class Point extends ColoredPoint {}
class ImaginaryNumber extends Number implements Arithmetic {}
public final class ImaginaryNumber extends Number implements Arithmetic {}
class ReprChange<T extends ConvertibleTo<S>,S extends ConvertibleTo<T> > {}
class Redundant implements java.lang.Cloneable, Cloneable{}

public class Main {
    int x;  // Create a class attribute
  
    // Create a class constructor for the Main class
    public Main() {
      x = 5;  // Set the initial value for the class attribute x
    }
     
    public static void main(String[] args) {
      //  Main obj = new Main() ;
    }
  }

class MyClass extends MySuperClass implements YourInterface {
    int x, y;
    int x = 3;
    // x = 5;
    private Point() {}
    final int baby(int ab.this,){}
    class rosey permits Udi{}
    Point(this,) { this(x instanceof y); }
    Point(int x) {z = a++;
      int[][].class.aisehi = 3;
      z=6;
      super.udit.name="ab";
      udit.name = (int)"mine";
      
      a[4] = 5;
      this.name = "udit";
      void.class.name = you;
      super.name = kyaabat;
      udit.this.wow=3;
      udit.wiw.kdkkkd.super.mneeee= "rosey";
      a &= d*f+r;
      a = k%z||x;
      z= b++;
      k = ++c ;
      r = c== ros;
      kyoo= x&&y;
      wwwww= x instanceof y;
      udit(mai = mast, you = also_mast);

    }
  }


class ReprChange<T extends ConvertibleTo<S>,S extends ConvertibleTo<T> > {
    {
        int a,b,c[][];
        public class ok{}
    }
}
// class Point extends ColoredPoint {}
// class ImaginaryNumber extends Number implements Arithmetic {}
// public final class ImaginaryNumber extends Number implements Arithmetic {}
// class ReprChange<T extends ConvertibleTo<S>,S extends ConvertibleTo<T> > {}
// // class Redundant implements java.lang.Cloneable, Cloneable{}

public class Main {
  int x = 5;

  public static void main(String[] args) {
    Main myObj1 = new Main();  // Object 1
    Main myObj2 = new Main();  // Object 2
    System.out.println(myObj1.x);
    System.out.println(myObj2.x);

  }
}

public class IfExample {  
  public static void main(String[] args) {  
      //defining an 'age' variable  
      int age=20;  
      //checking the age  
      Vector<string> str = new ArrayList<>();
      if(age>18){  
          System.out.println("Age is greater than 18");  
      }  
  }  
  } 

  public class IfElseExample {  
    public static void main(String[] args) {  
        //defining a variable  
        int number=13;  
        //Check if the number is divisible by 2 or not  
        if(number%2==0){  
            System.out.println("even number");  
        }else{  
            System.out.println("odd number");  
        }  
    }  
    } 

    public class LeapYearExample {    
      public static void main(String[] args) {    
          int year=2020;    
          if(((year % 4 ==0) && (year % 100 !=0)) || (year % 400==0)){  
              System.out.println("LEAP YEAR");  
          }  
          else{  
              System.out.println("COMMON YEAR");  
          }  
      }    
      } 

      class Testarray{  
        public static void main(String args[]){  
        int a[]=new int[5];//declaration and instantiation  
        a[0]=10;//initialization  
        a[1]=20;  
        a[2]=70;  
        a[3]=40;  
        a[4]=50;  
        //traversing array  
        for(int i=0;i<a.length;i++)//length is the property of array  
        System.out.println(a);  
        }}

        class Testarray1{  
            public static void main(String args[]){  
            int arr[]={33,3,4,5};  
            //printing array using for-each loop  
            for(int i:arr)  
            System.out.println(i);  
            }}
            public class TypeCheck1 {
                public int a;
                float b;
            
                public TypeCheck1(int a1, int b1) {
                    this.a = a1;
                    this.b = b1;
                }
            
                public int getA() {
                    return this.a;
                }
            
                public float getB() {
                    return this.b;
                }
            
                public void setA(int a1) {
                    this.a = a1;
                }
            
                public void setB(float b1) {
                    this.b = b1;
                }
            
                public static void main(String[] args) {
                    TypeCheck1 obj = new TypeCheck1(1, 2);
            
                    // Same names
                    int a = obj.a;
                    float b = obj.b;
                    
                    // Different names
                    int c = obj.a;
                    float d = obj.b;
            
                    System.out.println("a: " );
                }
            }



1, label, _check1
2, label, _Program
3, label, _Main
4, beginScope, _Program, _Main
5, readParam, _args
6, beginScope, _Main, None
7, =, _i, 9
8, <=, _tVar_0, _i, 9 // t0= i<=9
9, ifgoto, _tVar_0, label_3 // if to goto L3
10, goto, label_4 // goto L4
11, label, label_3 // L3:
12,     %, _tVar_1, _i, 2
13,     ==, _tVar_2, _tVar_1, 0
14,     ifgoto, _tVar_2, label_0
15,     goto, label_1
16, label, label_0 // L0:
17,     =, _res, 0
18,     goto, label_2
19, label, label_1 // L1:
20,      =, _res, 1
21,label, label_2 // L2:
22, label, label_4 // L4:
23,     =, _res, 2024
24,     printstr, "Parity of "
25,     printint, _i
26,     printstr, " is : "
27,     printint, _res
28,     printstr, "\n"
29,     endScope, None, _Main
30,     ret
31,     endScope, _Main, _Program


L9:
d := e
f := e
t0 := f == e
if t0 goto L5
goto L6
L5:
f := e
e := 
t1 := e==
if t1 goto L0
goto L3
L0:
ff := 
goto L4

L3:
t2 := e + ff
t3 := t2==
if t3 goto L1
goto L2
L1:
d := 
goto L2

L2:


goto L4
L4:

goto L6

L6:

t4 := c==
if t4 goto L7
goto L8
L7:
a := 
a := 
goto L8

L8:

t5 := d
d := d + 1


InnerClass:

printX:

        BeginFunc printX
a := true
b := false
d := 5
t0 := a || b
c := t0
d := e
f := e
t1 := f == e
if t1 goto L5
goto L6
L5:
f := e
e := 3
t2 := e == 3
if t2 goto L0
goto L3
L0:
ff := 2
goto L4

L3:
t3 := e + ff
t4 := t3 == 4
if t4 goto L1
goto L2
L1:
d := 10
goto L2

L2:


goto L4
L4:

goto L6

L6:

t5 := c == true
if t5 goto L7
goto L10
L7:
t6 := d
d := d + 1
d := 2 * d
goto L11

L10:
t7 := d == 2
if t7 goto L8
goto L9
L8:
d := 3
goto L9

L9:


goto L11
L11:

t8 := e
e := e - 1

        EndFunc printX